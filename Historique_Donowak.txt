## Historique du Projet Donowak

### Initialisation (Date et Heure)

- Création du projet Next.js 'donowak' avec TypeScript, Tailwind CSS, ESLint, App Router, dossier `src` et alias `@/*`.
- Nettoyage initial du projet : suppression des styles par défaut dans `src/app/globals.css`.
- Création du fichier `Historique_Donowak.txt` pour le suivi du projet. 

### Structure Initiale (Date et Heure)

- Mise en place de la structure des pages : Accueil, Prestations, Réalisations, À Propos, Blog, Contact, Dashboard.
- Création des fichiers `page.tsx` de base pour chaque section avec placeholders.
- Redirection de la page racine `/` vers `/accueil`.
- Ajout d'une navigation principale (header) et d'un pied de page (footer) dans `layout.tsx`.
- Configuration des métadonnées SEO de base (title, description) dans `layout.tsx`.
- Correction de l'intégration de la police (utilisation de Inter via next/font/google).
- Installation du client Supabase (`@supabase/supabase-js`).
- Création du fichier de configuration Supabase (`src/lib/supabaseClient.ts`) utilisant des variables d'environnement (`.env.local`).
- Ajout d'un formulaire de contact basique (sans logique de soumission backend pour l'instant). 

### Configuration Supabase (Date et Heure)

- Connexion au compte Supabase via CLI (`supabase login`).
- Création manuelle du projet Supabase (`moaibrkqszhnixupnjbp`) sur app.supabase.com.
- Liaison du projet local au projet distant via CLI (`supabase link --project-ref moaibrkqszhnixupnjbp`).
- Création de la migration SQL (`supabase/migrations/..._create_initial_tables.sql`) pour les tables `pages` et `blog_posts` (incluant RLS et triggers `updated_at`).
- Application de la migration à la base de données distante (`supabase db push`).
- Création manuelle des buckets de stockage publics `images` et `blog` via l'interface Supabase.
- Choix de l'hébergement externe (ex: YouTube/Vimeo) pour les vidéos.
- Création du fichier `.env.local` avec les variables `NEXT_PUBLIC_SUPABASE_URL` et `NEXT_PUBLIC_SUPABASE_ANON_KEY`. 

### Configuration GitHub (Date et Heure)

- Authentification via GitHub CLI (`gh auth login`).
- Création du dépôt distant public `Haeev/donowak` via CLI (`gh repo create`).
- Liaison du projet local au dépôt distant (`git remote add origin`).
- Envoi initial du code local vers le dépôt distant (`git push -u origin main`). 

### Déploiement Vercel (Date et Heure)

- Connexion au compte Vercel via CLI (`vercel login`) avec authentification GitHub.
- Liaison du projet local au compte Vercel (`vercel` puis `vercel link` pour confirmer).
  - Création du projet Vercel `donowak` sous le scope `Nowakowski's projects`.
- Ajout des variables d'environnement Supabase (`NEXT_PUBLIC_SUPABASE_URL`, `NEXT_PUBLIC_SUPABASE_ANON_KEY`) via CLI (`vercel env add ...`) pour l'environnement de Production.
- Pull des variables d'environnement pour le développement local (`vercel env pull .env.development.local`).
- **Diagnostic et correction des erreurs de build Vercel (`npm run build`):**
  - Correction des erreurs ESLint `react/no-unescaped-entities` (apostrophes) dans plusieurs fichiers `page.tsx`.
  - Correction de l'erreur de pré-rendu sur `/contact` en ajoutant la directive `'use client';` (gestion `onSubmit`).
  - Correction de l'erreur `Cannot find module '@supabase/supabase-js'` en installant le package comme dépendance de production (`npm install @supabase/supabase-js`).
- Commit et push des corrections sur GitHub (`git push origin main`).
- Déploiement manuel réussi vers l'environnement de production (`vercel --prod`).
- URL de production: https://donowak-e29em0xf8-nowakowskis-projects.vercel.app 

### Configuration d'Authentification et Corrections Structurelles (28/03/2025)

- Ajout de la fonctionnalité d'authentification avec Supabase pour protéger le tableau de bord administrateur.
  - Création des routes `/login` et `/auth` pour la gestion de l'authentification.
  - Mise en place du middleware pour vérifier l'authentification et protéger les routes `/dashboard/*`.
  - Création des utilitaires Supabase dans `src/utils/supabase/` (client, server, middleware).
- **Correction d'erreurs de structure du projet :**
  - Déplacement des fichiers d'authentification placés par erreur dans `/donowak/src/` vers le bon répertoire `/donowak/donowak/src/`.
  - Suppression des packages npm installés par erreur à la racine de l'espace de travail (`/donowak/`).
  - Identification d'un fichier `.env.local` mal placé dans un sous-dossier imbriqué (`/donowak/donowak/donowak/`).
  - Correction du fichier `next.config.ts` (non supporté) en le renommant en `next.config.js` (format supporté).
- **Correction des erreurs de déploiement Vercel :**
  - Résolution des erreurs ESLint qui bloquaient le déploiement :
    - Échappement des apostrophes dans les chaînes JSX avec `&apos;`.
    - Suppression de l'import inutilisé `NextResponse` dans `middleware.ts`.
    - Utilisation de commentaires `// eslint-disable-next-line` pour les variables d'erreur intentionnellement non utilisées.
  - Correction des erreurs de typage TypeScript en passant de versions Canary/expérimentales aux versions stables :
    - Next.js : de la version 15.2.4 (Canary) à la version 14.2.0 (stable).
    - React : de la version 19.0.0 (Canary) à la version 18.2.0 (stable).
    - ESLint : de la version 9 (expérimentale) à la version 8.57.0 (stable).
  - Suppression du flag `--turbopack` qui n'est pas compatible avec les versions stables. 

### Sécurisation de l'Accès Administrateur (28/03/2025)

- **Restriction des inscriptions et sécurisation du dashboard :**
  - Modification de la page de login pour désactiver l'inscription publique (`showLinks={false}` et `view="sign_in"`).
  - Transformation du dashboard en composant client avec vérification d'authentification en temps réel.
  - Implémentation d'une liste d'emails autorisés pour restreindre l'accès au dashboard à l'administrateur uniquement.
  - Ajout d'une déconnexion automatique pour les utilisateurs non autorisés.
  - Activation de la redirection automatique des utilisateurs déjà connectés de `/login` vers `/dashboard`.
  - Amélioration de l'expérience utilisateur avec des messages de chargement et des boutons de déconnexion.
  - Suppression du lien vers le dashboard de la navigation principale pour cacher son existence.
  - Création d'une route secrète (`/admin-access-6742`) pour accéder au dashboard via une URL connue uniquement par l'administrateur. 